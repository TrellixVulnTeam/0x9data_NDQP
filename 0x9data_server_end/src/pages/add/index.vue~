<template>
<div class="page-add">
<div class="container">
<div class="avatar">
<image :src="userInfo.avatarUrl"></image>
</div>

<div class="title">
<h2>今天</h2><span>{{date}}  {{time}}</span>
</div>

<div class="add-box">
<input type="text" v-model="content" placeholder="今天需要检查的电梯">
</div>

<button class="add-btn" @click="addTodo">添加任务</button>
</div>
</div>
</template>

<script>
import { formatTime } from '@/utils';
import store from '@/store';

var week = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']; 

export default {
	data() {
		return {
userInfo: {},
		  content: '',
		  time: formatTime(new Date()).t1,
		  date: week[new Date().getDay()],
		};
	},
		beforeMount () {
			this.getTodolist();
		},
methods: {
getUserInfo:function(cb){
		    console.log(cb)
			    var that = this
			    if(this.globalData.userInfo){
				    typeof cb == "function" && cb(this.globalData.userInfo)
			    }else{
				    // 调用登录接口
				    wx.login({
success: function () {
wx.getUserInfo({
success: function (res) {
that.globalData.userInfo = res.userInfo
typeof cb == "function" && cb(that.globalData.userInfo)
}
})
}
})

}
},

login_u: function (cb) {
		 var that = this
			 var domain_url = this.globalData.domain
			 var encryptdata = {}
		 // 登陆
		 wx.login({
success: function (res) {
// console.log('loginsuc',res)
encryptdata['code'] = res['code']

// 请求用户信息
wx.getUserInfo({
success: function (res) {
// console.log('getuserinfosuc',res)
encryptdata['encrypteddata'] = res['encryptedData']
encryptdata['iv'] = res['iv']
console.log('加密信息',encryptdata)
// 请求服务器
wx.request({
url: domain_url+'login/',
method:'POST',
data: Util.json2Form(encryptdata),
header: {
'content-type': 'application/x-www-form-urlencoded'
},
success: function (res) {
var info = res['data']
// console.log('login_r', res)
if (typeof info.error !== 'undefined') {
// 与服务器链接失败
console.log('与服务器链接失败')

wx.navigateTo({
url: '../error/error?error=' + info.error,
})
} else {
// 服务器返回内容
var info = res['data']
var userinfo = info['info']
// 缓存 cookie
wx.setStorage({
key: 'cookie',
data: userinfo['cookie']
})

// 添加全局数据
that.globalData.cookie = userinfo['cookie']
that.globalData.userInfo = userinfo
that.globalData.dirs = info['dirs']
that.globalData.cur_dir = info['dirs'][0]
// console.log('global',that.globalData)
typeof cb == "function" && cb(that.globalData)
}
},
	// 请求服务器失败
fail: function () {
	      console.log('请求服务器失败')
		      wx.navigateTo({
url: '../error/error?errorinfo=' + '请求服务器失败',
})
}

})
},
	// 获取用户信息失败
fail: function (res) {
	      console.log('获取用户信息失败', res)
		      wx.navigateTo({
url: '../error/error?errorinfo=' + '获取用户信息失败',
})

}
})

},

	// 登陆失败
fail: function (res) {
	      console.log('登陆失败', res)
		      wx.navigateTo({
url: '../error/error?errorinfo=' + '登陆失败',
})
}
})

},


	addTodo() {
		if (!this.content.trim()) {
			wx.showToast({
icon: 'none',
title: '请输入内容！',
})
return;
}
console.log(store.state.count);
store.commit('addTodo', {
content: this.content,
time: this.time,
});

this.content = '';

wx.switchTab({
url: '/pages/index/index',
});
},
	getTodolist(){
		console.log('json');
		store.commit('addTodo', {
content: 'dfsafsff',
time: this.time,
})

}
},

	mounted() {
		// 获取用户信息
		this.getUserInfo();
	},
	};
</script>

<style scoped>
.page-add{
padding: 25px;
}
.avatar{
width: 60px;
height: 60px;
	border-radius: 50%;
overflow: hidden;
margin: 0 auto;
}
.avatar image{
width: 100%;
height: 100%;
}
.title h2{
display: inline;
color: #333;
       font-size: 20px;
       margin-right: 10px;
}
.title span{
color: #999;
       font-size: 12px;
       font-weight: normal;
}
.add-box{
border: 1px solid #ddd;
margin: 20px 0;
	border-radius: 3px;
}
.add-box input{
	font-size: 14px;
padding: 5px 10px;
}
.add-btn{
border: none;
	box-shadow: none;
background: #EA5A49;
color: #FFF;
       font-size: 14px;
transition: transform 0.3s linear;
}
.add-btn:active{
transform: scale(0.95);
}
.add-btn:after{
border: none;
}
</style>
